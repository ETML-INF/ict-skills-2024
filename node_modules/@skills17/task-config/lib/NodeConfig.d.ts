import Config from './Config';
export default class NodeConfig extends Config {
    private configPath?;
    /**
     * Detect the path of the config.yaml file.
     * First, try it from the current file.
     * If that can't be found which is the case when installed using a symlink, try it from the cwd.
     */
    private static detectPath;
    /**
     * Detect the path of the config.yaml file synchronously.
     * First, try it from the current file.
     * If that can't be found which is the case when installed using a symlink, try it from the cwd.
     */
    private static detectPathSync;
    /**
     * Load the configuration from a file
     *
     * @param configPath Path of the config.yaml file, will be determined automatically if omitted
     */
    loadFromFile(configPath?: string): Promise<void>;
    /**
     * Load the configuration from a file synchronously
     *
     * @param configPath Path of the config.yaml file, will be determined automatically if omitted
     */
    loadFromFileSync(configPath?: string): void;
    getProjectRoot(): string;
    /**
     * Validate the config against the schema.
     *
     * @param config Config object
     */
    private validateSchema;
}
