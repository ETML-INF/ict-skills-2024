/**
 * Regional Championship 2024 - Skill 17 - Web Technologies
 * Frontend
 *
 * This file contains the unit tests performed on the frontend task.
 * You may look at the test cases but not modify them.
 *
 * !!! DO NOT EDIT THIS FILE !!!
 */

import { faker } from '@faker-js/faker';
import { GAME_OF_THE_CENTURY } from '../fixtures/games';

describe('UI', () => {
    beforeEach(() => {
        cy.viewport(640, 704);
        cy.visit('/cypress/fixtures/page/');
    });

    it('can create the board', () => {
        cy.get('#board')
            .find('tr')
            .should('have.length', 8)
            .each(($el) => {
                expect($el.find('td')).to.have.length(8);
            });
    });

    it('can get a square', () => {
        cy.window().then((win) => {
            // top left
            const a8 = win.document.querySelectorAll('#board td').item(0);
            expect(win.chess.getSquare('a8')).to.equal(a8);

            // bottom left
            const a1 = win.document.querySelectorAll('#board td').item(56);
            expect(win.chess.getSquare('a1')).to.equal(a1);

            // top right
            const h8 = win.document.querySelectorAll('#board td').item(7);
            expect(win.chess.getSquare('h8')).to.equal(h8);

            // bottom right
            const h1 = win.document.querySelectorAll('#board td').item(63);
            expect(win.chess.getSquare('h1')).to.equal(h1);
        });
    });

    it('can render a piece', () => {
        // a8 - Rook
        cy.get('#board tr:nth-child(1) td:nth-child(1)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/br.png');

        // a7 - Pawn
        cy.get('#board tr:nth-child(2) td:nth-child(1)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/bp.png');

        // e8 - King
        cy.get('#board tr:nth-child(1) td:nth-child(5)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/bk.png');

        // b1 - Knight
        cy.get('#board tr:nth-child(8) td:nth-child(2)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/wn.png');

        // d1 - Queen
        cy.get('#board tr:nth-child(8) td:nth-child(4)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/wq.png');

        // g2 - Pawn
        cy.get('#board tr:nth-child(7) td:nth-child(7)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/wp.png');

        // f1 - Bishop
        cy.get('#board tr:nth-child(8) td:nth-child(6)')
            .should('have.css', 'background-image')
            .and('include', 'lib/pieces/wb.png');
    });

    it('can clear pieces', () => {
        cy.window().then((win) => {
            win.chess.clearPieces();

            [...win.document.querySelectorAll('#board td')].every((square) =>
                expect(square.style.backgroundImage).to.equal('')
            );
        });
    });

    it('can render game info', () => {
        /** @type {import('../../src/util').Game} */
        const game = {
            white: faker.person.fullName(),
            black: faker.person.fullName(),
            result: '1-0',
        };

        cy.renderGameInfo(game);

        cy.get('#white').should('have.text', game.white);
        cy.get('#black').should('have.text', game.black);
        cy.get('#result').should('have.text', game.result);
    });

    it('can upload a PGN', () => {
        cy.showDialog();
        // PAS FINI NON PLUS WADDAHELL ?? ? ?? ?
        cy.window().then((win) => {
            win.chess.selectGame().then((game) => {
                expect(game.replace(/\s/g, '')).to.equal(
                    GAME_OF_THE_CENTURY.replace(/\s/g, '')
                );
            });
        });

        cy.get('#game-input').selectFile('lib/games/game-of-the-century.pgn', {
            force: true,
        });
    });

    it('can close the dialog after upload', () => {
        cy.showDialog();

        cy.window().then((win) => {
            win.chess.selectGame().then(() => {
                expect(win.document.querySelector('#select-game-dialog').open)
                    .to.be.false;
            });
        });

        cy.get('#game-input').selectFile('lib/games/game-of-the-century.pgn', {
            force: true,
        });
    });
});
