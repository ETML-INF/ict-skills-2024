/**
 * Regional Championship 2024 - Skill 17 - Web Technologies
 * Frontend
 *
 * This file contains the unit tests performed on the frontend task.
 * You may look at the test cases but not modify them.
 *
 * !!! DO NOT EDIT THIS FILE !!!
 */

import { readGameFromPGN } from '../../src/util';
import {
    BONGCLOUD_DRAW,
    GAME_OF_THE_CENTURY,
    MAGNUS_HANS,
} from '../fixtures/games';

describe('Games', () => {
    beforeEach(() => {
        cy.viewport(640, 704);
        cy.visit('/cypress/fixtures/page/');
    });

    it('Game of the century', () => {
        const game = readGameFromPGN(GAME_OF_THE_CENTURY);
        cy.renderGameInfo(game);

        game.moves.forEach((instructions) => cy.move(instructions));

        cy.window().then((window) => {
            const position = window.chess.getPosition();

            expect(position).to.have.deep.members([
                {
                    square: 'b8',
                    color: 'w',
                    notation: 'Q',
                },
                {
                    square: 'c1',
                    color: 'w',
                    notation: 'K',
                },
                {
                    square: 'e5',
                    color: 'w',
                    notation: 'N',
                },
                {
                    square: 'g2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'h4',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'c2',
                    color: 'b',
                    notation: 'R',
                },
                {
                    square: 'b3',
                    color: 'b',
                    notation: 'B',
                },
                {
                    square: 'g7',
                    color: 'b',
                    notation: 'K',
                },
                {
                    square: 'b4',
                    color: 'b',
                    notation: 'B',
                },
                {
                    square: 'c3',
                    color: 'b',
                    notation: 'N',
                },
                {
                    square: 'b5',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'c6',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'f7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'g6',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'h5',
                    color: 'b',
                    notation: 'P',
                },
            ]);
        });
    });

    it('Magnus vs. Hans Scandal', () => {
        const game = readGameFromPGN(MAGNUS_HANS);
        cy.renderGameInfo(game);

        game.moves.forEach((instructions) => cy.move(instructions));

        cy.window().then((window) => {
            const position = window.chess.getPosition();

            expect(position).to.have.deep.members([
                {
                    square: 'f2',
                    color: 'w',
                    notation: 'K',
                },
                {
                    square: 'd5',
                    color: 'w',
                    notation: 'B',
                },
                {
                    square: 'a5',
                    color: 'b',
                    notation: 'N',
                },
                {
                    square: 'e5',
                    color: 'b',
                    notation: 'K',
                },
                {
                    square: 'g4',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'h4',
                    color: 'b',
                    notation: 'P',
                },
            ]);
        });
    });

    it('Bongcloud draw', () => {
        const game = readGameFromPGN(BONGCLOUD_DRAW);
        cy.renderGameInfo(game);

        game.moves.forEach((instructions) => cy.move(instructions));

        cy.window().then((window) => {
            const position = window.chess.getPosition();

            expect(position).to.have.deep.members([
                {
                    square: 'a1',
                    color: 'w',
                    notation: 'R',
                },
                {
                    square: 'b1',
                    color: 'w',
                    notation: 'N',
                },
                {
                    square: 'c1',
                    color: 'w',
                    notation: 'B',
                },
                {
                    square: 'd1',
                    color: 'w',
                    notation: 'Q',
                },
                {
                    square: 'f1',
                    color: 'w',
                    notation: 'B',
                },
                {
                    square: 'g1',
                    color: 'w',
                    notation: 'N',
                },
                {
                    square: 'h1',
                    color: 'w',
                    notation: 'R',
                },
                {
                    square: 'a2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'b2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'c2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'd2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'f2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'g2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'h2',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'a8',
                    color: 'b',
                    notation: 'R',
                },
                {
                    square: 'b8',
                    color: 'b',
                    notation: 'N',
                },
                {
                    square: 'c8',
                    color: 'b',
                    notation: 'B',
                },
                {
                    square: 'd8',
                    color: 'b',
                    notation: 'Q',
                },
                {
                    square: 'f8',
                    color: 'b',
                    notation: 'B',
                },
                {
                    square: 'g8',
                    color: 'b',
                    notation: 'N',
                },
                {
                    square: 'h8',
                    color: 'b',
                    notation: 'R',
                },
                {
                    square: 'a7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'b7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'c7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'd7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'f7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'g7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'h7',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'e4',
                    color: 'w',
                    notation: 'P',
                },
                {
                    square: 'e5',
                    color: 'b',
                    notation: 'P',
                },
                {
                    square: 'e2',
                    color: 'w',
                    notation: 'K',
                },
                {
                    square: 'e7',
                    color: 'b',
                    notation: 'K',
                },
            ]);
        });
    });
});
